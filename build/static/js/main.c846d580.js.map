{"version":3,"file":"static/js/main.c846d580.js","mappings":"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","sources":["../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../webpack/bootstrap","index.js"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error(\"act(...) is not supported in production builds of React.\");}\nexports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};\nexports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};\nexports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.3.1\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link,\n  useNavigate,\n  useParams,\n  useLocation,\n} from \"react-router-dom\";\nimport \"./styles.css\"; // Create an empty or custom styles file\n\n/************************************\n * 1. LANGUAGE SUPPORT\n ************************************/\nconst AppLanguage = {\n  ENGLISH: \"en\",\n  GEORGIAN: \"ge\",\n};\n\nconst translations = {\n  en: {\n    appTitle: \"Drone Spraying Service\",\n    loginTitle: \"Drone Spraying Service\",\n    selectUser: \"Select User\",\n    loginButton: \"Login\",\n    logout: \"Logout\",\n    farmerDashboard: \"Farmer Dashboard\",\n    operatorDashboard: \"Operator Dashboard\",\n    pending: \"Pending\",\n    confirmed: \"Confirmed\",\n    cancelled: \"Cancelled\",\n    totalArea: \"Total Area\",\n    myBookings: \"My Bookings\",\n    noBookings: \"No bookings available.\",\n    myFields: \"My Fields\",\n    noFields: \"No fields available.\",\n    addNewField: \"Add New Field\",\n    requestSpray: \"Request Spray\",\n    editField: \"Edit Field\",\n    deleteField: \"Delete Field\",\n    confirmDelete: \"Are you sure you want to delete this field?\",\n    farmerPhone: \"Farmer Phone\",\n    price: \"Price\",\n    bookingCancelled: \"Booking cancelled successfully!\",\n    bookingSetTo: \"Booking set to\",\n    bookingConfirmed: \"Booking confirmed successfully!\",\n    submitRequest: \"Submit Request\",\n    pickDateRange: \"Pick Date Range\",\n    noDateSelected: \"No date range selected\",\n    dateRangeRequired: \"Please select a date range.\",\n    requestSprayService: \"Request Spray Service\",\n    dateRange: \"Date Range\",\n    sprayChemical: \"Chemical\",\n    dosage: \"Dosage\",\n    reason: \"Reason\",\n    priceGEL: \"Price (GEL)\",\n    allBookings: \"All Bookings\",\n    addField: \"Add Field\",\n    fieldName: \"Field Location\",\n    fieldSize: \"Size (ha)\",\n    cropType: \"Crop Type\",\n    cadasterCode: \"Cadaster Code (File Name)\",\n    farmerMobile: \"Farmer Mobile Phone\",\n    saveChanges: \"Save Changes\",\n    editFieldScreen: \"Edit Field\",\n    estimatedPrice: \"Estimated Price:\",\n    language: \"Language\",\n    bookingDetails: \"Booking Details\",\n    fieldInformation: \"Field Information\",\n    fileName: \"File Name\",\n  },\n  ge: {\n    appTitle: \"დრონით შეწამვლის სერვისი\",\n    loginTitle: \"დრონით შეწამვლის სერვისი\",\n    selectUser: \"აირჩიეთ მომხმარებელი\",\n    loginButton: \"შესვლა\",\n    logout: \"გასვლა\",\n    farmerDashboard: \"ფერმერის დაფა\",\n    operatorDashboard: \"ოპერატორის დაფა\",\n    pending: \"მოლოდინში\",\n    confirmed: \"მოთხოვნის დადასტურება\",\n    cancelled: \"მოთხოვნის გაუქმება\",\n    totalArea: \"ნაკვეთების საერთო ფართობი\",\n    myBookings: \"ჩემი ჯავშნები\",\n    noBookings: \"მოთხოვნა ვერ მოიძებნა.\",\n    myFields: \"ჩემი ნაკვეთები\",\n    noFields: \"დაამატეთ ნაკვეთი\",\n    addNewField: \"ნაკვეთის დამატება\",\n    requestSpray: \"დრონით შეწამვლის მოთხოვნა\",\n    editField: \"შეწამვლის მოთხოვნის შეცვლა\",\n    deleteField: \"ნაკვეთის წაშლა\",\n    confirmDelete: \"ნამდვილად გსურთ ნაკვეთის წაშლა?\",\n    farmerPhone: \"ფერმერის ტელეფონი\",\n    price: \"ფასი\",\n    bookingCancelled: \"მოთხოვნა წარმატებით გაუქმდა!\",\n    bookingSetTo: \"მოთხოვნა შეიცვალა:\",\n    bookingConfirmed: \"მოთხოვნა დადასტურდა!\",\n    submitRequest: \"გაგზავნა\",\n    pickDateRange: \"აირჩიეთ თქვენთვის სასურველი პერიოდი შესაწამლად\",\n    noDateSelected: \"შეწამვლის პერიოდი არ არის არჩეული\",\n    dateRangeRequired: \"გთხოვთ, აირჩიოთ პერიოდი.\",\n    requestSprayService: \"შეწამვლის მოთხოვნა\",\n    dateRange: \"შეწამვლის პერიოდი\",\n    sprayChemical: \"წამალი\",\n    dosage: \"დოზა\",\n    reason: \"შეწამვლის მიზეზი\",\n    priceGEL: \"ფასი (GEL)\",\n    allBookings: \"ყველა მოთხოვნა\",\n    addField: \"ნაკვეთის დამატება\",\n    fieldName: \"ლოკაცია\",\n    fieldSize: \"ფართობი (ჰა)\",\n    cropType: \"კულტურა\",\n    cadasterCode: \"საკადასტრო კოდი (ფაილი)\",\n    farmerMobile: \"საკონტაქტო ტელეფონი\",\n    saveChanges: \"ცვლილებების შენახვა\",\n    editFieldScreen: \"ნაკვეთის რედაქტირება\",\n    estimatedPrice: \"შესამვლის ფასი:\",\n    language: \"ენა\",\n    bookingDetails: \"მოთხოვნის დეტალები\",\n    fieldInformation: \"ნაკვეთის შესახებ\",\n    fileName: \"ფაილის სახელი\",\n  },\n};\n\nfunction t(lang, key) {\n  return translations[lang]?.[key] || key;\n}\n\n/************************************\n * 2. ENUMS & MODELS (JS style)\n ************************************/\nconst UserType = {\n  FARMER: \"farmer\",\n  OPERATOR: \"operator\",\n};\n\n// JS equivalents to your Dart classes\n// We'll just store them as normal objects.\n\n/************************************\n * 3. GLOBAL DATA (like your lists)\n ************************************/\nconst initialUsers = [\n  {\n    id: \"1\",\n    name: \"Irakli Shengelia\",\n    userType: UserType.FARMER,\n  },\n  {\n    id: \"2\",\n    name: \"Irakli Shengelia\",\n    userType: UserType.OPERATOR,\n  },\n];\n\nfunction nowPlusDays(days) {\n  // Helper to get a date [days] in the future\n  const d = new Date();\n  d.setDate(d.getDate() + days);\n  return d;\n}\n\n// We'll define your “fields” array\nconst initialFields = [\n  {\n    id: \"1\",\n    farmerId: \"1\",\n    name: \"North Field\",\n    size: 10,\n    cropType: \"Corn\",\n    farmerMobile: \"599 223389\",\n    details: {\n      fieldId: \"1\",\n      cadasterCode: \"cadaster_north_field.pdf\",\n      crop: {\n        stemCount: 100,\n        ndviIndex: 0.82,\n        plantHeight: 180.0,\n        plantDensity: 8.5,\n        predictedYield: 12.3,\n        multispectralData: {\n          RED: 0.12,\n          NIR: 0.85,\n          NDRE: 0.45,\n          GNDVI: 0.75,\n        },\n      },\n      weatherForecast: [\n        {\n          date: new Date(),\n          temperature: 22.5,\n          windSpeed: 4.2,\n          precipitation: 0.0,\n        },\n        {\n          date: nowPlusDays(1),\n          temperature: 23.0,\n          windSpeed: 3.8,\n          precipitation: 0.1,\n        },\n      ],\n    },\n  },\n];\n\n// “bookings” array\nconst initialBookings = [\n  {\n    id: \"100\",\n    farmerId: \"1\",\n    field: initialFields[0],\n    dateRange: {\n      start: new Date(),\n      end: nowPlusDays(2),\n    },\n    status: \"Pending\",\n    sprayChemical: \"Glyphosate\",\n    dosage: 2.5,\n    problemReason: \"Weed Control\",\n    price: 10 * 50,\n  },\n];\n\n/************************************\n * 4. SCREENS & COMPONENTS\n ************************************/\n\n// -- Helper components --\n\nfunction StatusChip({ status }) {\n  let backgroundColor = \"#eee\";\n  let textColor = \"#000\";\n  switch (status) {\n    case \"Pending\":\n      backgroundColor = \"#ffe8cc\";\n      textColor = \"#d56500\";\n      break;\n    case \"Confirmed\":\n      backgroundColor = \"#d5f5e3\";\n      textColor = \"#186a3b\";\n      break;\n    case \"Cancelled\":\n      backgroundColor = \"#f9cccc\";\n      textColor = \"#b03a2e\";\n      break;\n    default:\n      backgroundColor = \"#ddd\";\n      textColor = \"#333\";\n  }\n  return (\n    <span\n      style={{\n        backgroundColor,\n        color: textColor,\n        padding: \"4px 8px\",\n        borderRadius: \"8px\",\n        fontSize: \"0.85rem\",\n      }}\n    >\n      {status}\n    </span>\n  );\n}\n\nfunction CropIcon({ cropType }) {\n  // Map your crop to an icon or emoji\n  const map = {\n    Corn: \"🌽\",\n    Wheat: \"🌾\",\n    Sunflowers: \"🌻\",\n    Vegetables: \"🥕\",\n    Orchard: \"🌳\",\n  };\n  return <span style={{ marginRight: 6 }}>{map[cropType] || \"🚜\"}</span>;\n}\n\n// We’ll keep a simple “Back” button. In Flutter we had Navigator.pop; in React Router we do useNavigate().\nfunction BackButton() {\n  const navigate = useNavigate();\n  return (\n    <button style={{ marginRight: 8 }} onClick={() => navigate(-1)}>\n      {\"< Back\"}\n    </button>\n  );\n}\n\n// -- Login Screen --\nfunction LoginScreen({ currentLanguage, onLanguageToggle, onLogin, users }) {\n  const [selectedUserId, setSelectedUserId] = useState(users[0].id);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const user = users.find((u) => u.id === selectedUserId);\n    onLogin(user);\n  };\n\n  return (\n    <div style={{ padding: 16 }}>\n      <h1>{t(currentLanguage, \"loginTitle\")}</h1>\n      <button onClick={onLanguageToggle} style={{ float: \"right\" }}>\n        {t(currentLanguage, \"language\")}\n      </button>\n      <form onSubmit={handleSubmit}>\n        <label style={{ display: \"block\", margin: \"12px 0 6px\" }}>\n          {t(currentLanguage, \"selectUser\")}\n        </label>\n        <select\n          value={selectedUserId}\n          onChange={(e) => setSelectedUserId(e.target.value)}\n          style={{ display: \"block\", marginBottom: 12, width: 200 }}\n        >\n          {users.map((u) => (\n            <option key={u.id} value={u.id}>\n              {u.name} ({u.userType === UserType.FARMER ? \"Farmer\" : \"Operator\"}\n              )\n            </option>\n          ))}\n        </select>\n        <button\n          type=\"submit\"\n          style={{\n            padding: \"8px 16px\",\n            borderRadius: 6,\n            backgroundColor: \"green\",\n            color: \"#fff\",\n          }}\n        >\n          {t(currentLanguage, \"loginButton\")}\n        </button>\n      </form>\n    </div>\n  );\n}\n\n// -- Farmer Dashboard --\nfunction FarmerDashboard({\n  currentLanguage,\n  onLanguageToggle,\n  onLogout,\n  user,\n  fields,\n  bookings,\n}) {\n  const navigate = useNavigate();\n  const myFields = fields.filter((f) => f.farmerId === user.id);\n  const myBookings = bookings.filter((b) => b.farmerId === user.id);\n\n  const pending = myBookings.filter((b) => b.status === \"Pending\").length;\n  const confirmed = myBookings.filter((b) => b.status === \"Confirmed\").length;\n  const cancelled = myBookings.filter((b) => b.status === \"Cancelled\").length;\n  const totalArea = myBookings.reduce(\n    (sum, b) => sum + (b.field?.size || 0),\n    0\n  );\n\n  return (\n    <div style={{ padding: 16 }}>\n      <h1>{t(currentLanguage, \"farmerDashboard\")}</h1>\n      <button onClick={onLanguageToggle}>\n        {t(currentLanguage, \"language\")}\n      </button>\n      <button onClick={onLogout} style={{ marginLeft: 12 }}>\n        {t(currentLanguage, \"logout\")}\n      </button>\n      <hr />\n      {/* Stats */}\n      <h2>Statistics</h2>\n      <p>\n        {t(currentLanguage, \"pending\")}: {pending} &nbsp;|&nbsp;\n        {t(currentLanguage, \"confirmed\")}: {confirmed} &nbsp;|&nbsp;\n        {t(currentLanguage, \"cancelled\")}: {cancelled} &nbsp;|&nbsp;\n        {t(currentLanguage, \"totalArea\")}: {totalArea} ha\n      </p>\n\n      {/* Bookings */}\n      <h2>\n        {t(currentLanguage, \"myBookings\")} ({myBookings.length})\n      </h2>\n      {myBookings.length === 0 ? (\n        <p>{t(currentLanguage, \"noBookings\")}</p>\n      ) : (\n        myBookings.map((booking) => (\n          <div\n            key={booking.id}\n            style={{\n              border: \"1px solid #ccc\",\n              borderRadius: 8,\n              padding: 8,\n              marginBottom: 8,\n            }}\n          >\n            <h3>\n              <StatusChip status={booking.status} /> - {booking.field.name}\n            </h3>\n            <p>\n              {booking.field.size} ha - {booking.field.cropType}\n            </p>\n            <p>\n              {booking.dateRange.start.toLocaleDateString()} -{\" \"}\n              {booking.dateRange.end.toLocaleDateString()}\n            </p>\n            <p>\n              {t(currentLanguage, \"sprayChemical\")}: {booking.sprayChemical}\n            </p>\n            <p>\n              {t(currentLanguage, \"dosage\")}: {booking.dosage} gal/acre\n            </p>\n            <p>\n              {t(currentLanguage, \"reason\")}: {booking.problemReason}\n            </p>\n            <p>\n              {t(currentLanguage, \"price\")}: {booking.price.toFixed(2)} GEL\n            </p>\n            <button\n              onClick={() => navigate(`/booking/${booking.id}`)}\n              style={{ marginRight: 6 }}\n            >\n              {t(currentLanguage, \"bookingDetails\")}\n            </button>\n          </div>\n        ))\n      )}\n\n      {/* Fields */}\n      <h2>\n        {t(currentLanguage, \"myFields\")} ({myFields.length})\n      </h2>\n      {myFields.length === 0 ? (\n        <p>{t(currentLanguage, \"noFields\")}</p>\n      ) : (\n        myFields.map((field) => {\n          // Check if this field is locked by a pending/confirmed booking\n          const hasActiveBooking = bookings.some(\n            (b) =>\n              b.field.id === field.id &&\n              (b.status === \"Pending\" || b.status === \"Confirmed\")\n          );\n          return (\n            <div\n              key={field.id}\n              style={{\n                border: \"1px solid #ccc\",\n                borderRadius: 8,\n                padding: 8,\n                marginBottom: 8,\n              }}\n            >\n              <h3>\n                <CropIcon cropType={field.cropType} />\n                {field.name}\n              </h3>\n              <p>\n                {field.size} ha - {field.cropType}\n              </p>\n              <p>\n                {t(currentLanguage, \"farmerPhone\")}: {field.farmerMobile}\n              </p>\n              <button\n                onClick={() => navigate(`/edit-field/${field.id}`)}\n                style={{ marginRight: 6 }}\n              >\n                {t(currentLanguage, \"editField\")}\n              </button>\n              {!hasActiveBooking && (\n                <>\n                  <button\n                    onClick={() => navigate(`/request-spray/${field.id}`)}\n                    style={{ marginRight: 6 }}\n                  >\n                    {t(currentLanguage, \"requestSpray\")}\n                  </button>\n                  <button\n                    onClick={() => navigate(`/delete-field/${field.id}`)}\n                    style={{ marginRight: 6 }}\n                  >\n                    {t(currentLanguage, \"deleteField\")}\n                  </button>\n                </>\n              )}\n            </div>\n          );\n        })\n      )}\n      <button onClick={() => navigate(\"/add-field\")} style={{ marginTop: 12 }}>\n        {t(currentLanguage, \"addNewField\")}\n      </button>\n    </div>\n  );\n}\n\n// -- Operator Dashboard --\nfunction OperatorDashboard({\n  currentLanguage,\n  onLanguageToggle,\n  onLogout,\n  user,\n  fields,\n  bookings,\n}) {\n  const navigate = useNavigate();\n  const allBookings = bookings;\n  const allFields = fields;\n\n  const pending = allBookings.filter((b) => b.status === \"Pending\").length;\n  const confirmed = allBookings.filter((b) => b.status === \"Confirmed\").length;\n  const cancelled = allBookings.filter((b) => b.status === \"Cancelled\").length;\n  const totalArea = allBookings.reduce((sum, b) => sum + b.field.size, 0);\n\n  return (\n    <div style={{ padding: 16 }}>\n      <h1>{t(currentLanguage, \"operatorDashboard\")}</h1>\n      <button onClick={onLanguageToggle}>\n        {t(currentLanguage, \"language\")}\n      </button>\n      <button onClick={onLogout} style={{ marginLeft: 12 }}>\n        {t(currentLanguage, \"logout\")}\n      </button>\n      <hr />\n      <h2>Statistics</h2>\n      <p>\n        {t(currentLanguage, \"pending\")}: {pending} &nbsp;|&nbsp;\n        {t(currentLanguage, \"confirmed\")}: {confirmed} &nbsp;|&nbsp;\n        {t(currentLanguage, \"cancelled\")}: {cancelled} &nbsp;|&nbsp;\n        {t(currentLanguage, \"totalArea\")}: {totalArea} ha\n      </p>\n\n      <h2>\n        {t(currentLanguage, \"allBookings\")} ({allBookings.length})\n      </h2>\n      {allBookings.length === 0 ? (\n        <p>{t(currentLanguage, \"noBookings\")}</p>\n      ) : (\n        allBookings.map((booking) => (\n          <div\n            key={booking.id}\n            style={{\n              border: \"1px solid #ccc\",\n              borderRadius: 8,\n              padding: 8,\n              marginBottom: 8,\n            }}\n          >\n            <h3>\n              <StatusChip status={booking.status} /> - {booking.field.name}\n            </h3>\n            <p>\n              {booking.field.size} ha - {booking.field.cropType}\n            </p>\n            <p>\n              {booking.dateRange.start.toLocaleDateString()} -{\" \"}\n              {booking.dateRange.end.toLocaleDateString()}\n            </p>\n            <p>\n              {t(currentLanguage, \"sprayChemical\")}: {booking.sprayChemical}\n            </p>\n            <p>\n              {t(currentLanguage, \"dosage\")}: {booking.dosage} gal/acre\n            </p>\n            <p>\n              {t(currentLanguage, \"reason\")}: {booking.problemReason}\n            </p>\n            <p>\n              {t(currentLanguage, \"price\")}: {booking.price.toFixed(2)} GEL\n            </p>\n            <button\n              onClick={() => navigate(`/booking/${booking.id}`)}\n              style={{ marginRight: 6 }}\n            >\n              {t(currentLanguage, \"bookingDetails\")}\n            </button>\n          </div>\n        ))\n      )}\n\n      <h2>\n        {t(currentLanguage, \"myFields\")} ({allFields.length})\n      </h2>\n      {allFields.length === 0 ? (\n        <p>{t(currentLanguage, \"noFields\")}</p>\n      ) : (\n        allFields.map((field) => (\n          <div\n            key={field.id}\n            style={{\n              border: \"1px solid #ccc\",\n              borderRadius: 8,\n              padding: 8,\n              marginBottom: 8,\n            }}\n          >\n            <h3>\n              <CropIcon cropType={field.cropType} />\n              {field.name}\n            </h3>\n            <p>\n              {field.size} ha - {field.cropType}\n            </p>\n            <p>\n              {t(currentLanguage, \"farmerPhone\")}: {field.farmerMobile}\n            </p>\n            <button\n              onClick={() => navigate(`/edit-field/${field.id}`)}\n              style={{ marginRight: 6 }}\n            >\n              {t(currentLanguage, \"editField\")}\n            </button>\n            <button\n              onClick={() => navigate(`/delete-field/${field.id}`)}\n              style={{ marginRight: 6 }}\n            >\n              {t(currentLanguage, \"deleteField\")}\n            </button>\n          </div>\n        ))\n      )}\n\n      <button onClick={() => navigate(\"/add-field\")} style={{ marginTop: 12 }}>\n        {t(currentLanguage, \"addNewField\")}\n      </button>\n    </div>\n  );\n}\n\n// -- Add Field Screen --\nfunction AddFieldScreen({ currentLanguage, onAddField, user }) {\n  const navigate = useNavigate();\n  const [fieldName, setFieldName] = useState(\"\");\n  const [fieldSize, setFieldSize] = useState(\"\");\n  const [cropType, setCropType] = useState(\"Corn\");\n  const [cadasterCode, setCadasterCode] = useState(\"\");\n  const [farmerMobile, setFarmerMobile] = useState(\"\");\n\n  const crops = [\n    \"Corn\",\n    \"Wheat\",\n    \"Barley\",\n    \"Orchard\",\n    \"Vegetables\",\n    \"Sunflowers\",\n    // etc...\n  ];\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!fieldName || !fieldSize || !farmerMobile) {\n      alert(\n        t(currentLanguage, \"fieldName\") +\n          \" / \" +\n          t(currentLanguage, \"fieldSize\")\n      );\n      return;\n    }\n    const newField = {\n      id: Date.now().toString(),\n      farmerId: user.id,\n      name: fieldName,\n      size: parseFloat(fieldSize),\n      cropType,\n      farmerMobile,\n      details: {\n        fieldId: Date.now().toString(),\n        cadasterCode,\n        crop: {\n          stemCount: 0,\n          ndviIndex: 0,\n          plantHeight: 0,\n          plantDensity: 0,\n          predictedYield: 0,\n          multispectralData: {},\n        },\n        weatherForecast: [],\n      },\n    };\n    onAddField(newField);\n    navigate(-1);\n  };\n\n  return (\n    <div style={{ padding: 16 }}>\n      <BackButton />\n      <h2>{t(currentLanguage, \"addNewField\")}</h2>\n      <form onSubmit={handleSubmit} style={{ maxWidth: 400 }}>\n        <div style={{ marginBottom: 8 }}>\n          <label>{t(currentLanguage, \"fieldName\")}</label>\n          <input\n            type=\"text\"\n            value={fieldName}\n            onChange={(e) => setFieldName(e.target.value)}\n            style={{ display: \"block\", width: \"100%\", marginTop: 4 }}\n          />\n        </div>\n        <div style={{ marginBottom: 8 }}>\n          <label>{t(currentLanguage, \"fieldSize\")}</label>\n          <input\n            type=\"number\"\n            step=\"0.1\"\n            value={fieldSize}\n            onChange={(e) => setFieldSize(e.target.value)}\n            style={{ display: \"block\", width: \"100%\", marginTop: 4 }}\n          />\n        </div>\n        <div style={{ marginBottom: 8 }}>\n          <label>{t(currentLanguage, \"cropType\")}</label>\n          <select\n            value={cropType}\n            onChange={(e) => setCropType(e.target.value)}\n            style={{ display: \"block\", width: \"100%\", marginTop: 4 }}\n          >\n            {crops.map((c) => (\n              <option key={c} value={c}>\n                {c}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div style={{ marginBottom: 8 }}>\n          <label>{t(currentLanguage, \"cadasterCode\")}</label>\n          <input\n            type=\"text\"\n            value={cadasterCode}\n            onChange={(e) => setCadasterCode(e.target.value)}\n            style={{ display: \"block\", width: \"100%\", marginTop: 4 }}\n          />\n        </div>\n        <div style={{ marginBottom: 8 }}>\n          <label>{t(currentLanguage, \"farmerMobile\")}</label>\n          <input\n            type=\"text\"\n            value={farmerMobile}\n            onChange={(e) => setFarmerMobile(e.target.value)}\n            style={{ display: \"block\", width: \"100%\", marginTop: 4 }}\n          />\n        </div>\n        <button\n          type=\"submit\"\n          style={{\n            padding: \"8px 16px\",\n            borderRadius: 6,\n            background: \"green\",\n            color: \"#fff\",\n          }}\n        >\n          {t(currentLanguage, \"addField\")}\n        </button>\n      </form>\n    </div>\n  );\n}\n\n// -- Edit Field Screen --\nfunction EditFieldScreen({ currentLanguage, fields, onUpdateField }) {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const field = fields.find((f) => f.id === id);\n  if (!field) {\n    return (\n      <div style={{ padding: 16 }}>\n        <BackButton />\n        <p>Field not found!</p>\n      </div>\n    );\n  }\n\n  const [fieldName, setFieldName] = useState(field.name);\n  const [fieldSize, setFieldSize] = useState(field.size.toString());\n  const [cropType, setCropType] = useState(field.cropType);\n  const [cadasterCode, setCadasterCode] = useState(field.details.cadasterCode);\n  const [farmerMobile, setFarmerMobile] = useState(field.farmerMobile);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!fieldName || !fieldSize || isNaN(fieldSize)) {\n      alert(\n        t(currentLanguage, \"fieldName\") +\n          \" / \" +\n          t(currentLanguage, \"fieldSize\")\n      );\n      return;\n    }\n    const updated = {\n      ...field,\n      name: fieldName,\n      size: parseFloat(fieldSize),\n      cropType,\n      farmerMobile,\n      details: {\n        ...field.details,\n        cadasterCode,\n      },\n    };\n    onUpdateField(updated);\n    navigate(-1);\n  };\n\n  const crops = [\n    \"Corn\",\n    \"Wheat\",\n    \"Barley\",\n    \"Orchard\",\n    \"Vegetables\",\n    \"Sunflowers\",\n  ];\n\n  return (\n    <div style={{ padding: 16 }}>\n      <BackButton />\n      <h2>{t(currentLanguage, \"editFieldScreen\")}</h2>\n      <form onSubmit={handleSubmit} style={{ maxWidth: 400 }}>\n        <div style={{ marginBottom: 8 }}>\n          <label>{t(currentLanguage, \"fieldName\")}</label>\n          <input\n            type=\"text\"\n            value={fieldName}\n            onChange={(e) => setFieldName(e.target.value)}\n            style={{ display: \"block\", width: \"100%\", marginTop: 4 }}\n          />\n        </div>\n        <div style={{ marginBottom: 8 }}>\n          <label>{t(currentLanguage, \"fieldSize\")}</label>\n          <input\n            type=\"number\"\n            step=\"0.1\"\n            value={fieldSize}\n            onChange={(e) => setFieldSize(e.target.value)}\n            style={{ display: \"block\", width: \"100%\", marginTop: 4 }}\n          />\n        </div>\n        <div style={{ marginBottom: 8 }}>\n          <label>{t(currentLanguage, \"cropType\")}</label>\n          <select\n            value={cropType}\n            onChange={(e) => setCropType(e.target.value)}\n            style={{ display: \"block\", width: \"100%\", marginTop: 4 }}\n          >\n            {crops.map((c) => (\n              <option key={c} value={c}>\n                {c}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div style={{ marginBottom: 8 }}>\n          <label>{t(currentLanguage, \"cadasterCode\")}</label>\n          <input\n            type=\"text\"\n            value={cadasterCode}\n            onChange={(e) => setCadasterCode(e.target.value)}\n            style={{ display: \"block\", width: \"100%\", marginTop: 4 }}\n          />\n        </div>\n        <div style={{ marginBottom: 8 }}>\n          <label>{t(currentLanguage, \"farmerMobile\")}</label>\n          <input\n            type=\"text\"\n            value={farmerMobile}\n            onChange={(e) => setFarmerMobile(e.target.value)}\n            style={{ display: \"block\", width: \"100%\", marginTop: 4 }}\n          />\n        </div>\n        <button\n          type=\"submit\"\n          style={{\n            padding: \"8px 16px\",\n            borderRadius: 6,\n            background: \"orange\",\n            color: \"#fff\",\n          }}\n        >\n          {t(currentLanguage, \"saveChanges\")}\n        </button>\n      </form>\n    </div>\n  );\n}\n\n// -- Delete Field “Screen” (just a small confirm) --\nfunction DeleteFieldScreen({\n  currentLanguage,\n  fields,\n  onDeleteField,\n  bookings,\n}) {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const field = fields.find((f) => f.id === id);\n  if (!field) {\n    return (\n      <div style={{ padding: 16 }}>\n        <BackButton />\n        <p>Field not found!</p>\n      </div>\n    );\n  }\n  // Some fields might be locked by active bookings. We check that here:\n  const hasActiveBooking = bookings.some(\n    (b) =>\n      b.field.id === field.id &&\n      (b.status === \"Pending\" || b.status === \"Confirmed\")\n  );\n\n  const handleDelete = () => {\n    onDeleteField(field.id);\n    navigate(-1);\n  };\n\n  return (\n    <div style={{ padding: 16 }}>\n      <BackButton />\n      <h2>{t(currentLanguage, \"deleteField\")}</h2>\n      {hasActiveBooking ? (\n        <p style={{ color: \"red\" }}>\n          Cannot delete this field—it has an active booking!\n        </p>\n      ) : (\n        <>\n          <p>{t(currentLanguage, \"confirmDelete\")}</p>\n          <button\n            onClick={handleDelete}\n            style={{ marginRight: 8, color: \"white\", background: \"red\" }}\n          >\n            {t(currentLanguage, \"deleteField\")}\n          </button>\n        </>\n      )}\n    </div>\n  );\n}\n\n// -- Booking Detail Screen --\nfunction BookingDetailScreen({\n  currentLanguage,\n  user,\n  bookings,\n  onUpdateBooking,\n}) {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const booking = bookings.find((b) => b.id === id);\n\n  if (!booking) {\n    return (\n      <div style={{ padding: 16 }}>\n        <BackButton />\n        <p>Booking not found!</p>\n      </div>\n    );\n  }\n\n  const handleCancel = () => {\n    const updated = { ...booking, status: \"Cancelled\" };\n    onUpdateBooking(updated);\n    alert(t(currentLanguage, \"bookingCancelled\"));\n    navigate(-1);\n  };\n\n  const handleConfirmPendingToggle = () => {\n    // If it’s Pending, set to Confirmed; if Confirmed, set to Pending\n    let newStatus = booking.status === \"Pending\" ? \"Confirmed\" : \"Pending\";\n    const updated = { ...booking, status: newStatus };\n    onUpdateBooking(updated);\n    if (newStatus === \"Confirmed\") {\n      alert(t(currentLanguage, \"bookingConfirmed\"));\n    } else {\n      alert(`${t(currentLanguage, \"bookingSetTo\")} ${newStatus}`);\n    }\n    navigate(-1);\n  };\n\n  return (\n    <div style={{ padding: 16 }}>\n      <BackButton />\n      <h2>{t(currentLanguage, \"bookingDetails\")}</h2>\n      <div style={{ border: \"1px solid #ccc\", borderRadius: 8, padding: 8 }}>\n        <StatusChip status={booking.status} />\n        <h3>{booking.field.name}</h3>\n        <p>\n          {booking.field.size} ha - {booking.field.cropType}\n        </p>\n        <p>\n          {booking.dateRange.start.toLocaleString()} -{\" \"}\n          {booking.dateRange.end.toLocaleString()}\n        </p>\n        <p>\n          {t(currentLanguage, \"sprayChemical\")}: {booking.sprayChemical}\n        </p>\n        <p>\n          {t(currentLanguage, \"dosage\")}: {booking.dosage} gal/acre\n        </p>\n        <p>\n          {t(currentLanguage, \"reason\")}: {booking.problemReason}\n        </p>\n        <p>\n          {t(currentLanguage, \"priceGEL\")}: {booking.price.toFixed(2)}\n        </p>\n        <hr />\n        <h4>{t(currentLanguage, \"fieldInformation\")}</h4>\n        <p>\n          {t(currentLanguage, \"farmerMobile\")}: {booking.field.farmerMobile}\n        </p>\n        <p>\n          {t(currentLanguage, \"fileName\")}: {booking.field.details.cadasterCode}\n        </p>\n        {/* Show weather forecast, crop data, etc. if you like */}\n      </div>\n      <br />\n      {booking.status !== \"Cancelled\" && (\n        <button\n          onClick={handleCancel}\n          style={{ marginRight: 8, background: \"red\", color: \"#fff\" }}\n        >\n          {t(currentLanguage, \"cancelled\")}\n        </button>\n      )}\n      {user.userType === UserType.OPERATOR &&\n        booking.status !== \"Cancelled\" && (\n          <button\n            onClick={handleConfirmPendingToggle}\n            style={{ background: \"green\", color: \"#fff\" }}\n          >\n            {booking.status === \"Pending\"\n              ? t(currentLanguage, \"confirmed\")\n              : t(currentLanguage, \"pending\")}\n          </button>\n        )}\n    </div>\n  );\n}\n\n// -- Request Spray Screen --\nfunction RequestSprayScreen({ currentLanguage, user, fields, onAddBooking }) {\n  const { fieldId } = useParams();\n  const navigate = useNavigate();\n  const field = fields.find((f) => f.id === fieldId);\n  if (!field) {\n    return (\n      <div style={{ padding: 16 }}>\n        <BackButton />\n        <p>Field not found!</p>\n      </div>\n    );\n  }\n\n  const [chemical, setChemical] = useState(\"Glyphosate\");\n  const [dosage, setDosage] = useState(\"\");\n  const [reason, setReason] = useState(\"\");\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n\n  const chemicals = [\n    \"Glyphosate\",\n    \"Paraquat\",\n    \"Atrazine\",\n    \"Dicamba\",\n    \"2,4-D\",\n    \"Chlorpyrifos\",\n  ];\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!startDate || !endDate) {\n      alert(t(currentLanguage, \"dateRangeRequired\"));\n      return;\n    }\n    if (!dosage || isNaN(dosage) || dosage <= 0) {\n      alert(t(currentLanguage, \"dosage\"));\n      return;\n    }\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    if (end < start) {\n      alert(\"End date must be after start date\");\n      return;\n    }\n    const price = field.size * 50; // your formula\n\n    const newBooking = {\n      id: Date.now().toString(),\n      farmerId: user.id,\n      field,\n      dateRange: { start, end },\n      status: \"Pending\",\n      sprayChemical: chemical,\n      dosage: parseFloat(dosage),\n      problemReason: reason,\n      price,\n    };\n    onAddBooking(newBooking);\n    navigate(-1);\n  };\n\n  const pricePreview = field.size * 50;\n\n  return (\n    <div style={{ padding: 16 }}>\n      <BackButton />\n      <h2>\n        {t(currentLanguage, \"requestSprayService\")} - {field.name}\n      </h2>\n      <p>\n        {t(currentLanguage, \"estimatedPrice\")} {pricePreview.toFixed(2)} GEL\n      </p>\n      <form onSubmit={handleSubmit} style={{ maxWidth: 400 }}>\n        <div style={{ marginBottom: 8 }}>\n          <label>{t(currentLanguage, \"sprayChemical\")}</label>\n          <select\n            value={chemical}\n            onChange={(e) => setChemical(e.target.value)}\n            style={{ display: \"block\", width: \"100%\", marginTop: 4 }}\n          >\n            {chemicals.map((c) => (\n              <option key={c} value={c}>\n                {c}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div style={{ marginBottom: 8 }}>\n          <label>{t(currentLanguage, \"dosage\")} (gal/acre)</label>\n          <input\n            type=\"number\"\n            step=\"0.1\"\n            value={dosage}\n            onChange={(e) => setDosage(e.target.value)}\n            style={{ display: \"block\", width: \"100%\", marginTop: 4 }}\n          />\n        </div>\n        <div style={{ marginBottom: 8 }}>\n          <label>{t(currentLanguage, \"reason\")}</label>\n          <input\n            type=\"text\"\n            value={reason}\n            onChange={(e) => setReason(e.target.value)}\n            style={{ display: \"block\", width: \"100%\", marginTop: 4 }}\n          />\n        </div>\n        <div style={{ marginBottom: 8 }}>\n          <label>{t(currentLanguage, \"dateRange\")}</label>\n          <br />\n          <input\n            type=\"date\"\n            value={startDate}\n            onChange={(e) => setStartDate(e.target.value)}\n            style={{ marginRight: 8 }}\n          />\n          <input\n            type=\"date\"\n            value={endDate}\n            onChange={(e) => setEndDate(e.target.value)}\n          />\n        </div>\n\n        <button\n          type=\"submit\"\n          style={{\n            padding: \"8px 16px\",\n            borderRadius: 6,\n            background: \"green\",\n            color: \"#fff\",\n          }}\n        >\n          {t(currentLanguage, \"submitRequest\")}\n        </button>\n      </form>\n    </div>\n  );\n}\n\n/************************************\n * 5. MAIN APP\n ************************************/\nexport default function App() {\n  const [currentLanguage, setCurrentLanguage] = useState(AppLanguage.GEORGIAN);\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [users, setUsers] = useState(initialUsers);\n  const [fields, setFields] = useState(initialFields);\n  const [bookings, setBookings] = useState(initialBookings);\n\n  const toggleLanguage = () => {\n    setCurrentLanguage((prev) =>\n      prev === AppLanguage.GEORGIAN ? AppLanguage.ENGLISH : AppLanguage.GEORGIAN\n    );\n  };\n\n  const handleLogin = (user) => {\n    setLoggedInUser(user);\n  };\n\n  const handleLogout = () => {\n    setLoggedInUser(null);\n  };\n\n  const handleAddField = (newField) => {\n    setFields((prev) => [...prev, newField]);\n  };\n\n  const handleUpdateField = (updatedField) => {\n    setFields((prev) =>\n      prev.map((f) => (f.id === updatedField.id ? updatedField : f))\n    );\n  };\n\n  const handleDeleteField = (fieldId) => {\n    setFields((prev) => prev.filter((f) => f.id !== fieldId));\n    setBookings((prev) => prev.filter((b) => b.field.id !== fieldId));\n  };\n\n  const handleAddBooking = (newBooking) => {\n    setBookings((prev) => [...prev, newBooking]);\n  };\n\n  const handleUpdateBooking = (updated) => {\n    setBookings((prev) => prev.map((b) => (b.id === updated.id ? updated : b)));\n  };\n\n  return (\n    <Router>\n      <Routes>\n        {/* If not logged in, show login */}\n        {!loggedInUser ? (\n          <Route\n            path=\"*\"\n            element={\n              <LoginScreen\n                currentLanguage={currentLanguage}\n                onLanguageToggle={toggleLanguage}\n                onLogin={handleLogin}\n                users={users}\n              />\n            }\n          />\n        ) : loggedInUser.userType === UserType.FARMER ? (\n          <>\n            {/* Farmer routes */}\n            <Route\n              path=\"/\"\n              element={\n                <FarmerDashboard\n                  currentLanguage={currentLanguage}\n                  onLanguageToggle={toggleLanguage}\n                  onLogout={handleLogout}\n                  user={loggedInUser}\n                  fields={fields}\n                  bookings={bookings}\n                />\n              }\n            />\n            <Route\n              path=\"/add-field\"\n              element={\n                <AddFieldScreen\n                  currentLanguage={currentLanguage}\n                  user={loggedInUser}\n                  onAddField={handleAddField}\n                />\n              }\n            />\n            <Route\n              path=\"/edit-field/:id\"\n              element={\n                <EditFieldScreen\n                  currentLanguage={currentLanguage}\n                  fields={fields}\n                  onUpdateField={handleUpdateField}\n                />\n              }\n            />\n            <Route\n              path=\"/delete-field/:id\"\n              element={\n                <DeleteFieldScreen\n                  currentLanguage={currentLanguage}\n                  fields={fields}\n                  bookings={bookings}\n                  onDeleteField={handleDeleteField}\n                />\n              }\n            />\n            <Route\n              path=\"/booking/:id\"\n              element={\n                <BookingDetailScreen\n                  currentLanguage={currentLanguage}\n                  user={loggedInUser}\n                  bookings={bookings}\n                  onUpdateBooking={handleUpdateBooking}\n                />\n              }\n            />\n            <Route\n              path=\"/request-spray/:fieldId\"\n              element={\n                <RequestSprayScreen\n                  currentLanguage={currentLanguage}\n                  user={loggedInUser}\n                  fields={fields}\n                  onAddBooking={handleAddBooking}\n                />\n              }\n            />\n            {/* If no specific route, go to home (FarmerDashboard) */}\n            <Route\n              path=\"*\"\n              element={\n                <FarmerDashboard\n                  currentLanguage={currentLanguage}\n                  onLanguageToggle={toggleLanguage}\n                  onLogout={handleLogout}\n                  user={loggedInUser}\n                  fields={fields}\n                  bookings={bookings}\n                />\n              }\n            />\n          </>\n        ) : (\n          <>\n            {/* Operator routes */}\n            <Route\n              path=\"/\"\n              element={\n                <OperatorDashboard\n                  currentLanguage={currentLanguage}\n                  onLanguageToggle={toggleLanguage}\n                  onLogout={handleLogout}\n                  user={loggedInUser}\n                  fields={fields}\n                  bookings={bookings}\n                />\n              }\n            />\n            <Route\n              path=\"/add-field\"\n              element={\n                <AddFieldScreen\n                  currentLanguage={currentLanguage}\n                  user={loggedInUser}\n                  onAddField={handleAddField}\n                />\n              }\n            />\n            <Route\n              path=\"/edit-field/:id\"\n              element={\n                <EditFieldScreen\n                  currentLanguage={currentLanguage}\n                  fields={fields}\n                  onUpdateField={handleUpdateField}\n                />\n              }\n            />\n            <Route\n              path=\"/delete-field/:id\"\n              element={\n                <DeleteFieldScreen\n                  currentLanguage={currentLanguage}\n                  fields={fields}\n                  bookings={bookings}\n                  onDeleteField={handleDeleteField}\n                />\n              }\n            />\n            <Route\n              path=\"/booking/:id\"\n              element={\n                <BookingDetailScreen\n                  currentLanguage={currentLanguage}\n                  user={loggedInUser}\n                  bookings={bookings}\n                  onUpdateBooking={handleUpdateBooking}\n                />\n              }\n            />\n            <Route\n              path=\"/request-spray/:fieldId\"\n              element={\n                <RequestSprayScreen\n                  currentLanguage={currentLanguage}\n                  user={loggedInUser}\n                  fields={fields}\n                  onAddBooking={handleAddBooking}\n                />\n              }\n            />\n            <Route\n              path=\"*\"\n              element={\n                <OperatorDashboard\n                  currentLanguage={currentLanguage}\n                  onLanguageToggle={toggleLanguage}\n                  onLogout={handleLogout}\n                  user={loggedInUser}\n                  fields={fields}\n                  bookings={bookings}\n                />\n              }\n            />\n          </>\n        )}\n      </Routes>\n    </Router>\n  );\n}\n"],"names":["f","require","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","r","t","u","v","w","x","y","z","iterator","B","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","C","assign","D","E","this","context","refs","updater","F","G","isReactComponent","setState","Error","forceUpdate","H","constructor","isPureReactComponent","I","Array","isArray","J","K","L","M","arguments","length","children","O","P","Q","replace","escape","toString","R","N","push","A","next","done","value","String","keys","join","S","T","_status","_result","then","default","U","V","transition","W","ReactCurrentDispatcher","ReactCurrentBatchConfig","X","exports","Children","map","forEach","apply","count","toArray","only","Component","Fragment","Profiler","PureComponent","StrictMode","Suspense","act","cloneElement","createContext","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","_context","createElement","createFactory","bind","createRef","forwardRef","render","isValidElement","lazy","_payload","_init","memo","compare","startTransition","unstable_act","useCallback","useContext","useDebugValue","useDeferredValue","useEffect","useId","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useSyncExternalStore","useTransition","version","module","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","nowPlusDays","days","Date","setDate","getDate","initialFields","id","farmerId","name","size","cropType","farmerMobile","details","fieldId","cadasterCode","crop","stemCount","ndviIndex","plantHeight","plantDensity","predictedYield","multispectralData","RED","NIR","NDRE","GNDVI","weatherForecast","date","temperature","windSpeed","precipitation"],"sourceRoot":""}